#!/usr/bin/env python3
"""
This CLI is used to run common ansible recipes
 
view the help for more information

./usegalaxy.py -h
"""
import argparse
from cli.ansible import Ansible
from cli.dependencies import DependencyManager

"""
Parse args and run the appropriate function
"""
def main():
    parser = ArgParser()
    parser.run()

"""
ArgParser class

Attributes:
    parser: The argparse parser
"""
class ArgParser():
    def __init__(self):
        self.parser = argparse.ArgumentParser(
            prog="UseGalaxyCLI",
            description="Used to run commmon ansible recipes")
        subparsers = self.parser.add_subparsers(help='sub-command help')

        setup_command = subparsers.add_parser('setup', help="setup all components")
        setup_command.set_defaults(func=setup)

        setup_command = subparsers.add_parser('requirements', help="download all requirements")
        setup_command.set_defaults(func=requirements)

    def run(self) -> None:
        args = self.parser.parse_args()
        if not hasattr(args, "func"):
            self.parser.print_help()
            exit(1)
        args.func(args)


"""
run the ansible requirements
"""
def requirements(args):
    ansible = Ansible()
    depManager = DependencyManager()

    depManager.update_venv()
    depManager.verify_all()

    ansible.requirements()


"""
run the galaxy setup(includes all components)
"""
def setup(args):
    ansible = Ansible()
    depManager = DependencyManager()

    depManager.verify_all()

    ansible.set_yaml("galaxy.yml")
    ansible.run()

if __name__ == "__main__":
    main()
