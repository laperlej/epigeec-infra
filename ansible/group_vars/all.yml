---
MAINTENANCE_MODE: false

# Python 3 support
pip_virtualenv_command: /usr/bin/python3 -m venv # usegalaxy_eu.certbot, usegalaxy_eu.tiaas2, galaxyproject.galaxy

# Common variables needed by all hosts
galaxy_user_name: galaxy
galaxy_db_name: galaxy

#domain
usegalaxy_domain: "{{ lookup('env', 'GALAXY_HOSTNAME') }}"
galaxy_subnet: "{{ lookup('env', 'GALAXY_SUBNET') }}"
galaxy_public_page_url: "{{ lookup('env', 'GALAXY_PUBLIC_PAGE_URL') }}"

## Slurm
slurm_config:
  SlurmctldHost: "{{ groups['slurmcontrolservers'][0] }}"
  SelectType: select/cons_res
  SelectTypeParameters: CR_CPU_Memory # Allocate individual cores/memory instead of entire node
  ReturnToService: 2
  # AccountingStorageHost: "{{ groups['slurmcontrolservers'][0] }}"
  # AccountingStorageType: "accounting_storage/slurmdbd"
  # AccountingStorageUser: "slurm"
  #JobAcctGatherType: "jobacct_gather/linux"

slurm_cgroup_config:
  CgroupMountpoint: "/sys/fs/cgroup"
  CgroupAutomount: yes
  ConstrainCores: yes
  TaskAffinity: no
  ConstrainRAMSpace: yes
  ConstrainSwapSpace: no
  ConstrainDevices: no
  AllowedRamSpace: 100
  AllowedSwapSpace: 0
  MaxRAMPercent: 100
  MaxSwapPercent: 100

slurm_partitions:
  - name: main
    Default: YES
    MaxTime: UNLIMITED
    Nodes: ALL

slurm_user:
  group: slurm
  name: slurm

# Galaxy vars that will be reused by Pulsar
galaxy_job_metrics_plugins:
  - type: core
  - type: cpuinfo
  - type: meminfo
  - type: uname
  - type: env
  - type: cgroup
  - type: hostname

# Telegraf
telegraf_agent_package_state: latest

# Configure the output to point to an InfluxDB
# place data in the database "telegraf" which will be created if need be.
telegraf_agent_output:
  - type: influxdb
    config:
      - urls = ["http://{{ groups['monitorservers'][0] }}:8086"]
      - database = "telegraf"

# The default plugins, applied to any telegraf-configured host
telegraf_plugins_default:
  - plugin: cpu
  - plugin: disk
  - plugin: kernel
  - plugin: processes
  - plugin: io
  - plugin: mem
  - plugin: system
  - plugin: swap
  - plugin: net
  - plugin: netstat

# Sentry
sentry_domain: "sentry.{{ inventory_hostname }}"

# IBM TSM
tsm_deb: /home/{{ OS_USERNAME }}/SP_CLIENT_8.1.20.tgz
